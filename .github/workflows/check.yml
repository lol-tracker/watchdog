name: Check for update

on:
  #schedule:
  #  - cron:  '*/30 * * * *'
  workflow_dispatch:

jobs:
  check:
    runs-on: windows-latest
    outputs:
      is_outdated: ${{ steps.check.outputs.is_outdated }}
    steps:
      - name: Setup the League Client
        id: league-client
        uses: lol-tracker/setup-league-client@latest
        with:
          username: ${{ secrets.LOL_USERNAME }}
          password: ${{ secrets.LOL_PASSWORD }}
          region: ${{ secrets.LOL_REGION }}
      # - name: Checkout content repository
      #   uses: actions/checkout@v3
      #   with:
      #     repository: 'lol-tracker/content'
      #     ssh-key: ${{ secrets.CONTENT_SSH_PRIVATE_KEY }}
      #     path: 'content'
      - name: Check for update
        id: check
        uses: actions/github-script@v6
        with:
          script: |
            const https = require('https');

            const lol_ver_url = 'https://127.0.0.1:${{ steps.league-client.outputs.lcu-port }}/lol-patch/v1/game-version';
            console.log(${{ steps.league-client.outputs.lcu-password }});
            console.log(${{ steps.league-client.outputs.lcu-port }});

            const lol_ver = await (await fetch(lol_ver_url, {
              headers: { 'Authorization': 'Basic ' + base64.encode('riot:${{ steps.league-client.outputs.lcu-password }}') },
              agent: new https.Agent({
                rejectUnauthorized: false,
              }),
            })).text();
            const local_ver = await (await fetch('https://raw.githubusercontent.com/lol-tracker/content/main/lol/version.txt')).text();
            const is_outdated = lol_ver != local_ver
            console.log(`lol_ver: ${lol_ver}`);
            console.log(`local_ver: ${local_ver}`);
            console.log(`is_outdated: ${is_outdated}`);
            core.setOutput('is_outdated', 'is_outdated');
  update:
    needs: check
    if: ${{ needs.check.outputs.is_outdated }}
    uses: ./.github/workflows/update.yml